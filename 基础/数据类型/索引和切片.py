# !/usr/bin/env python
name = "ksunone"
# 索引  （下标）
"""
    所谓“下标”，就是编号，就好比超市中的存储柜的编号，通过这个编号就能找到相应的存储空间
    列表与元组支持下标索引好理解，字符串实际上就是字符的数组，所以也支持下标索引。
    如果想取出部分字符，那么可以通过下标的方法.
    k s u n o n e
    0 1 2 3 4 5 6
"""

get = name[0]

print(get)

# 切片
"""
    切片是指对操作的对象截取其中一部分的操作。字符串、列表、元组都支持切片操作。
    切片的语法：[起始:结束:步长]
    注意：选取的区间属于“左闭右开型”，即从"起始"位开始，到"结束"位的前一位结束（不包含结束位本身)。
"""
# 取下标 1 2 3 的字符
print(name[1:4], "name[1:4]".rjust(20, "."))  # -------- 输出 sun

# 取 下标为2开始到最后的字符
print(name[4:], "name[4:]".rjust(20, "."))  # -------- 输出 one

# 取  从开始到下标为5的字符
print(name[:4], "name[:4]".rjust(20, "."))  # -------- 输出ksun

# 取 下标为1开始 到 最后第二个(包括第二个) 之间的字符
print(name[1:-1], "name[1:-1]".rjust(20, "."))  # ------- 输出sunon

abc = "01234567"
# 从开始到结束，每两个截取
print(abc[::2], "abc[::2]".rjust(20, "."))  # 输出 0246

# 从开始到下标4，没两个截取
print(abc[:4:2], "abc[:4:2]".rjust(20, "."))  # 输出 02

# 从开始到结束，从后截取
print(abc[::-1], "abc[::-1]".rjust(20, "."))  # 输出 76543210
